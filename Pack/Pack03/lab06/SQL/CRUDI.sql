CREATE OR REPLACE PACKAGE BODY PC_OPINIONES IS 
  
  PROCEDURE AD_OPINION (xtipo IN VARCHAR, xjustificacion IN VARCHAR, xdetalle IN VARCHAR, xperfilc IN VARCHAR, xcontenidoid IN VARCHAR) IS
    BEGIN
      INSERT INTO OPINION(tipo ,justificacion ,detalle ,perfilc ,contenidoid) VALUES (xtipo ,xjustificacion ,xdetalle ,xperfilc ,xcontenidoid);
      COMMIT;
      EXCEPTION 
      WHEN OTHERS THEN
        ROLLBACK;
        RAISE_APPLICATION_ERROR(-20010, 'No se puede insertar opinion.');
    END;

  PROCEDURE MOD_OPINION (XNUMERO IN NUMBER, XDETALLE IN XMLTYPE) IS
  BEGIN
    UPDATE OPINION SET DETALLE = XDETALLE WHERE NUMERO=XNUMERO; 
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN 
      ROLLBACK;
      RAISE_APPLICATION_ERROR(-20019,'No se puede actualizar la opinion');
  END;
  PROCEDURE EL_OPINION (xnumero IN NUMBER) IS 
  BEGIN
    DELETE  FROM OPINION WHERE  numero  = xnumero;
    COMMIT; 
    EXCEPTION
        WHEN OTHERS THEN 
            ROLLBACK;  
        RAISE_APPLICATION_ERROR(-20000,'Error al eliminar opinion.');
   END;
   
    FUNCTION CO_VIDEOS_OPINIONES RETURN SYS_REFCURSOR IS CO_VIDEO SYS_REFCURSOR;
    BEGIN
        OPEN CO_VIDEO FOR 
            select tema.nombre as Tema, temporal.url as URL,opinion.numero as Opiniones
            from tema,contenidoTema,Temporal,Opinion
            where tema.nombre =contenidoTema.tema and  contenidoTema.contenido = temporal.nombre and temporal.nombre = opinion.contenidoid;
        RETURN CO_VIDEO;
    END;
END PC_OPINIONES;
/



CREATE OR REPLACE PACKAGE BODY PC_CONTENIDOS IS 

  PROCEDURE AD_CONTENIDO (xnombre IN VARCHAR, xurl IN VARCHAR, xtipo IN VARCHAR, xperfil IN VARCHAR, xduracion IN NUMBER, xidioma IN VARCHAR) IS
    BEGIN
      INSERT INTO TEMPORAL (nombre ,url ,tipo ,perfil ,duracion,idioma) VALUES (xnombre ,xurl ,xtipo  ,xperfil,xduracion,xidioma);
      COMMIT;
      EXCEPTION   
      WHEN OTHERS THEN
        ROLLBACK;
        RAISE_APPLICATION_ERROR(-20010, 'No se puede insertar contenido.');
    END;
    
    PROCEDURE MOD_ETIQUETA_CONTENIDO(xcontenido IN VARCHAR,xnombre IN VARCHAR) IS
    BEGIN
      UPDATE ETIQUETA SET NOMBRE = XNOMBRE WHERE temporal = XCONTENIDO;
      COMMIT;
      EXCEPTION
      WHEN OTHERS THEN 
        ROLLBACK;
        RAISE_APPLICATION_ERROR(-20016,'NO SE PUDO ACTUALIZAR EL CONTENIDO');  
    END;

    PROCEDURE DEL_CONTENIDO(xnombre IN VARCHAR) IS
    BEGIN
      DELETE FROM TEMPORAL WHERE NOMBRE =  XNOMBRE;
      COMMIT;
      EXCEPTION
      WHEN OTHERS THEN 
        ROLLBACK;
        RAISE_APPLICATION_ERROR(-2017,'NO SE PUDO ELIMINAR EL CONTENIDO');
    END;
    FUNCTION CO_POPULARES RETURN SYS_REFCURSOR IS POPULARES SYS_REFCURSOR;
    BEGIN
        OPEN POPULARES FOR            
            SELECT PERFIL.NOMBRE AS PERFIL, TEMPORAL.NOMBRE ,TEMPORAL.URL, COUNT(CONSULTA.CONTENIDO) AS VECES
            FROM  CONSULTA,TEMPORAL,PERFIL
            WHERE CONSULTA.PERFIL =  PERFIL.CORREO AND CONSULTA.CONTENIDO = TEMPORAL.NOMBRE
            GROUP BY PERFIL.NOMBRE,TEMPORAL.NOMBRE,TEMPORAL.URL,CONSULTA.CONTENIDO
            ORDER BY COUNT(CONTENIDO);
        RETURN POPULARES;
    END;
    
    FUNCTION CO_SINFILTRO  RETURN SYS_REFCURSOR IS SINFILTRO SYS_REFCURSOR;
    BEGIN
        OPEN SINFILTRO FOR 
            select TEMPORAL.NOMBRE AS NOMBRE,TEMPORAL.FECHA AS FECHA,TEMPORAL.URL AS  URL,TEMPORAL.TIPO,
            TEMPORAL.PERFIL AS PERFIL ,TEMPORAL.DURACION AS DURACION,TEMPORAL.IDIOMA AS IDIOMA
            FROM TEMPORAL FULL JOIN CONTENIDOFILTRO
            ON TEMPORAL.NOMBRE = CONTENIDOFILTRO.CONTENIDO;
        RETURN SINFILTRO;
    END;
    
    FUNCTION CO_CONTENIDO_TEMA(NOMBRE_TEMA VARCHAR)   RETURN SYS_REFCURSOR IS CON_TEMA SYS_REFCURSOR;
    BEGIN
        OPEN con_tema FOR
            SELECT TEMPORAL.NOMBRE AS TITULO, COUNT(OPINION.NUMERO) AS OPINIONES
            FROM TEMPORAL,OPINION,CONTENIDOTEMA
            WHERE OPINION.CONTENIDOID = TEMPORAL.NOMBRE AND CONTENIDOTEMA.TEMA = NOMBRE_TEMA 
            AND opinion.tipo NOT IN ('C','N')
            GROUP BY TEMPORAL.NOMBRE,OPINION.NUMERO
            ORDER BY OPINION.NUMERO;    

        RETURN CON_TEMA;
    END;
    
    FUNCTION CO_TEMA_NOCONTENIDO RETURN SYS_REFCURSOR IS SIN_CONTENIDO SYS_REFCURSOR;
    BEGIN
        OPEN SIN_CONTENIDO FOR
            SELECT TEMA.NOMBRE AS TEMA ,TEMA.PERFIL AS PERFIL
            FROM TEMA 
            WHERE TEMA.NOMBRE NOT IN (SELECT TEMA FROM CONTENIDOTEMA);
        RETURN SIN_CONTENIDO;
    END;
END PC_CONTENIDOS;
/